{"ast":null,"code":"var _jsxFileName = \"/Users/st/Desktop/job/kjh/modern-react/07.news-viewer/src/components/NewsList.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport NewsItem from './NewsItem';\nimport axios from 'axios';\n/**\n * API를 요청하고 뉴스 데이터가 들어 있는 배열 컴포넌트\n */\n\nconst NewsListBlock = styled.div`\n  box-sizing: border-box;\n  padding-bottom: 3rem;\n  width: 768px;\n  margin: 0 auto;\n  margin-top: 2rem;\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n`;\n\nconst NewsList = () => {\n  const [article, setArticles] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // async를 사용하는 함수 따로 선언\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const response = await axios.get('https://newsapi.org/v2/top-headlines?country=kr&apiKey=0a8c4202385d4ec1bb93b7e277b3c51f');\n        setArticles(response.data.articles);\n      } catch (e) {\n        console.log(e);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []); // 대기 중일 때\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(NewsListBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }, \"\\uB300\\uAE30 \\uC911...\");\n  } // 아직 articles 값이 설정되지 않았을 때\n\n\n  if (!articles) {\n    return null;\n  } // articles 값이 유효할 때\n\n\n  return /*#__PURE__*/React.createElement(NewsListBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default NewsList;","map":{"version":3,"sources":["/Users/st/Desktop/job/kjh/modern-react/07.news-viewer/src/components/NewsList.js"],"names":["React","useState","useEffect","styled","NewsItem","axios","NewsListBlock","div","NewsList","article","setArticles","loading","setLoading","fetchData","response","get","data","articles","e","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;;;;AAIA,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAI;;;;;;;;;;;CAAjC;;AAaA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMW,SAAS,GAAG,YAAY;AAC5BD,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAME,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CACrB,yFADqB,CAAvB;AAGAL,QAAAA,WAAW,CAACI,QAAQ,CAACE,IAAT,CAAcC,QAAf,CAAX;AACD,OALD,CAKE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;;AACDN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXD;;AAYAC,IAAAA,SAAS;AACV,GAfQ,EAeN,EAfM,CAAT,CAJqB,CAqBrB;;AACA,MAAIF,OAAJ,EAAa;AACX,wBAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD,GAxBoB,CAyBrB;;;AACA,MAAI,CAACM,QAAL,EAAe;AACb,WAAO,IAAP;AACD,GA5BoB,CA8BrB;;;AACA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CApCD;;AAsCA,eAAeT,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport NewsItem from './NewsItem';\nimport axios from 'axios';\n/**\n * API를 요청하고 뉴스 데이터가 들어 있는 배열 컴포넌트\n */\n\nconst NewsListBlock = styled.div`\n  box-sizing: border-box;\n  padding-bottom: 3rem;\n  width: 768px;\n  margin: 0 auto;\n  margin-top: 2rem;\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n`;\n\nconst NewsList = () => {\n  const [article, setArticles] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // async를 사용하는 함수 따로 선언\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          'https://newsapi.org/v2/top-headlines?country=kr&apiKey=0a8c4202385d4ec1bb93b7e277b3c51f',\n        );\n        setArticles(response.data.articles);\n      } catch (e) {\n        console.log(e);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  // 대기 중일 때\n  if (loading) {\n    return <NewsListBlock>대기 중...</NewsListBlock>;\n  }\n  // 아직 articles 값이 설정되지 않았을 때\n  if (!articles) {\n    return null;\n  }\n\n  // articles 값이 유효할 때\n  return (\n    <NewsListBlock>\n\n    </NewsListBlock>\n  );\n};\n\nexport default NewsList;\n"]},"metadata":{},"sourceType":"module"}